package com.speedment.demo.sakila.sakila.film_comment.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.demo.sakila.sakila.film.Film;
import com.speedment.demo.sakila.sakila.film_comment.FilmComment;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.speedment.demo.sakila.sakila.film_comment.FilmComment}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedFilmCommentImpl implements FilmComment {
    
    private int filmId;
    private String comment;
    
    protected GeneratedFilmCommentImpl() {}
    
    @Override
    public int getFilmId() {
        return filmId;
    }
    
    @Override
    public Optional<String> getComment() {
        return Optional.ofNullable(comment);
    }
    
    @Override
    public FilmComment setFilmId(int filmId) {
        this.filmId = filmId;
        return this;
    }
    
    @Override
    public FilmComment setComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @Override
    public Film findFilmId(Manager<Film> foreignManager) {
        return foreignManager.stream().filter(Film.FILM_ID.equal(getFilmId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("filmId = "  + Objects.toString(getFilmId()));
        sj.add("comment = " + Objects.toString(OptionalUtil.unwrap(getComment())));
        return "FilmCommentImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof FilmComment)) { return false; }
        final FilmComment thatFilmComment = (FilmComment)that;
        if (this.getFilmId() != thatFilmComment.getFilmId()) { return false; }
        if (!Objects.equals(this.getComment(), thatFilmComment.getComment())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getFilmId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getComment()));
        return hash;
    }
}