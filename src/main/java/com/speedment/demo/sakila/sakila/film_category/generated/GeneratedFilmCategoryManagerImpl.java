package com.speedment.demo.sakila.sakila.film_category.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.demo.sakila.sakila.film_category.FilmCategory;
import com.speedment.demo.sakila.sakila.film_category.FilmCategoryImpl;
import com.speedment.demo.sakila.sakila.film_category.FilmCategoryManager;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.speedment.demo.sakila.sakila.film_category.FilmCategory} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedFilmCategoryManagerImpl 
extends AbstractManager<FilmCategory> 
implements GeneratedFilmCategoryManager {
    
    private final TableIdentifier<FilmCategory> tableIdentifier;
    
    protected GeneratedFilmCategoryManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("sakila", "sakila", "film_category");
    }
    
    @Override
    public FilmCategory create() {
        return new FilmCategoryImpl();
    }
    
    @Override
    public TableIdentifier<FilmCategory> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<FilmCategory>> fields() {
        return FilmCategoryManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<FilmCategory>> primaryKeyFields() {
        return Stream.of(
            FilmCategory.FILM_ID,
            FilmCategory.CATEGORY_ID
        );
    }
}